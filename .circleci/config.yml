version: 2.1
jobs:
  test-go:
    # Install go modules and run tests
    docker:
      - image: cimg/go:1.20
    steps:
      - checkout
      # Cache dependencies
      - restore_cache:
          key: go-mod-{{ checksum "go.mod" }}
      - run:
          name: Download Go modules
          command: go mod download
      - save_cache:
          key: go-mod-{{ checksum "go.mod" }}
          paths:
            - /home/circleci/go/pkg/mod
      - run:
          name: Run tests with coverage being saved
          command: go list ./... | circleci tests run --timings-type "name" --command "xargs gotestsum --junitfile junit.xml --format testname -- -coverprofile=cover.out"
      # For a rerun, restore the coverage files from the inital run 
      - restore_cache:
          key: coverage-{{.Revision}}
      # Save the coverage, even for failed build, when it hasn't already been saved (circleci will not save over same revision key)
      - save_cache:
          key: coverage-{{.Revision}}
          paths:
            - cover.out
          when: always
      # Needed for to rerun failed tests
      - store_test_results:
          path: junit.xml
          when: always
      # Upload coverage file html so we can show it includes all the tests (not just rerun)
      - run:
          name: Save html coverage
          command: go tool cover -html=cover.out -o cover.html
          when: always
      - store_artifacts:
          path: cover.html
          when: always
workflows:
  test:
    jobs:
      - test-go
